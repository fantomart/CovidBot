REGIONS_TEMPLATES = {
    "Красноярский край": "KYA",
    "Москвовская область": "MOS",
    "Нижегородская область": "NIZ",
    "Республика Дагестан": "DA",
    "Мурманская область": "MUR",
    "Краснодарский край": "KDA",
    "Свердловская область": "SVE",
    "Тульская область": "TUL",
    "Ростовская область": "ROS",
    "Калужская область": "KLU",
    "Республика Татарстан": "TT",
    "Рязанская область": "RYA",
    "Брянская область": "BRY",
    "Республика Северная Осетия - Алания": "SE",
    "Ленинградская область": "LEN",
    "Республика Башкортостан": "BA",
    "Курская область": "KRS",
    "Тамбовская область": "TAM",
    "Владимирская область": "VLA",
    "Кабардино-Балкарская Республика": "KB",
    "Республика Ингушетия": "IN",
    "Ямало-Ненецкий автономный округ": "YAN",
    "Республика Мордовия": "MO",
    "Республика Чувашия": "CU",
    "Ярославская область": "YAR",
    "Новосибирская область": "NVS",
    "Саратовская область": "SAR",
    "Ставропольский край": "STA",
    "Челябинская область": "CHE",
    "Орловская область": "ORL",
    "Волгоградская область": "VGG",
    "Самарская область": "SAM",
    "Оренбургская область": "ORE",
    "Республика Марий Эл": "ME",
    "Хабаровский край": "KHA",
    "Тверская область": "TVE",
    "Приморский край": "PRI",
    "Липецкая область": "LIP",
    "Воронежская область": "VOR",
    "Республика Коми": "KO",
    "Ульяновская область": "ULY",
    "Кировская область": "KIR",
    "Тюменская область": "TUU",
    "Пензенская область": "PNZ",
    "Чеченская Республика": "CE",
    "Ивановская область": "IVA",
    "Пермский край": "PER",
    "Смоленская область": "SMO",
    "Астраханская область": "AST",
    "Калининградская область": "KGD",
    "Белгородская область": "BEL",
    "Ханты-Мансийский АО": "KHM",
    "Алтайский край": "ALT",
    "Республика Бурятия": "BU",
    "Карачаево-Черкесская Республика": "KC",
    "Республика Саха (Якутия)": "SA",
    "Новгородская область": "NGR",
    "Республика Калмыкия": "KL",
    "Республика Хакасия": "KK",
    "Архангельская область": "ARK",
    "Камчатский край": "KAM",
    "Удмуртская Республика": "UD",
    "Костромская область": "KOS",
    "Забайкальский край": "ZAB",
    "Псковская область": "PSK",
    "Иркутская область": "IRK",
    "Вологодская область": "VLG",
    "Омская область": "OMS",
    "Кемеровская область": "KEM",
    "Республика Адыгея": "AD",
    "Томская область": "TOM",
    "Республика Крым": "CR",
    "Еврейская автономная область": "YEV",
    "Магаданская область": "MAG",
    "Республика Карелия": "KR",
    "Амурская область": "AMU",
    "Севастополь": "SEV",
    "Республика Тыва": "TY",
    "Курганская область": "KGN",
    "Республика Алтай": "GA",
    "Ненецкий автономный округ": "NEN",
    "Сахалинская область": "SAK",
    "Чукотский автономный округ": "CHU",
}

CITIES_TEMPLATES = {
    "Красноярск": "KYA",
    "Москва": "MOW",
    "Санкт-Петербург": "SPE",
    "Нижний Новгород": "NIZ",
    "Махачкала": "DA",
    "Мурманск": "MUR",
    "Краснодар": "KDA",
    "Екатеринбург": "SVE",
    "Тула": "TUL",
    "Ростов-на-Дону": "ROS",
    "Калуга": "KLU",
    "Казань": "TT",
    "Рязань": "RYA",
    "Брянск": "BRY",
    "Владикавказ": "SE",
    "Уфа": "BA",
    "Курск": "KRS",
    "Тамбов": "TAM",
    "Владимир": "VLA",
    "Нальчик": "KB",
    "Магас": "IN",
    "Салехард": "YAN",
    "Саранск": "MO",
    "Чебоксары": "CU",
    "Ярославль": "YAR",
    "Новосибирск": "NVS",
    "Саратов": "SAR",
    "Ставрополь": "STA",
    "Челябинск": "CHE",
    "Орел": "ORL",
    "Волгоград": "VGG",
    "Самара": "SAM",
    "Оренбург": "ORE",
    "Йошкар-Ола": "ME",
    "Хабаровск": "KHA",
    "Тверь": "TVE",
    "Владивосток": "PRI",
    "Липецк": "LIP",
    "Воронеж": "VOR",
    "Сыктывкар": "KO",
    "Ульяновск": "ULY",
    "Киров": "KIR",
    "Тюмень": "TUU",
    "Пенза": "PNZ",
    "Грозный": "CE",
    "Иваново": "IVA",
    "Пермь": "PER",
    "Смоленс": "SMO",
    "Астрахань": "AST",
    "Калининград": "KGD",
    "Белгород": "BEL",
    "Ханты-Мансийск": "KHM",
    "Барнаул": "ALT",
    "Улан-Удэ": "BU",
    "Черкесск": "KC",
    "Якутск": "SA",
    "Великий Новгород": "NGR",
    "Элиста": "KL",
    "Абакан": "KK",
    "Архангельск": "ARK",
    "Петропавловск-Камчатский": "KAM",
    "Ижевск": "UD",
    "Кострома": "KOS",
    "Чита": "ZAB",
    "Псков": "PSK",
    "Иркутск": "IRK",
    "Вологда": "VLG",
    "Омск": "OMS",
    "Кемерово": "KEM",
    "Майкоп": "AD",
    "Томск": "TOM",
    "Симферополь": "CR",
    "Биробиджан": "YEV",
    "Магадан": "MAG",
    "Петрозаводск": "KR",
    "Благовещенск": "AMU",
    "Севастополь": "SEV",
    "Кызыл": "TY",
    "Курган": "KGN",
    "Горно-Алтайск": "GA",
    "Нарьян-Мар": "NEN",
    "Южно-Сахалинск": "SAK",
    "Анадырь": "CHU",
}

ADDITIONAL_REGION_TEMPLATES = {
    "Дагестан": "DA",
    "Татарстан": "TT",
    "Республика Северная Осетия": "SE",
    "Алания": "SE",
    "Осетия": "SE",
    "Башкоростан": "BA",
    "Башкирия": "BA",
    "Кабардино-Балкария": "KB",
    "Ингушетия": "IN",
    "Ямало Ненецкий автономный округ": "YAN",
    "Мордовия": "MO",
    "Чувашия": "CU",
    "Марий Эл": "ME",
    "Коми": "KO",
    "Чечня": "CE",
    "Ханты Мансийский АО": "KHM",
    "Ханты-Мансийский автономный округ": "KHM",
    "Ханты Мансийский автономный округ": "KHM",
    "Бурятия": "BU",
    "Карачаево-Черкесская Республика": "KC",
    "Карачаево Черкесская Республика": "KC",
    "Карачаево-Черкессия": "KC",
    "Якутия": "SA",
    "Саха": "SA",
    "Калмыкия": "KL",
    "Хакасия": "KK",
    "Камчатка": "KAM",
    "Удмуртия": "UD",
    "Адыгея": "AD",
    "Крым": "CR",
    "Еврейская АО": "YEV",
    "Карелия": "KR",
    "Тыва": "TY",
    "Ненецкий АО": "NEN",
    "Чукотский АО": "CHU",
}

ADDITIONAL_CITY_TEMPLATES = {
    "Санкт Петербург": "SPE",
    "Питер": "SPE",
    "Ростов на Дону": "ROS",
    "Йошкар Ола": "ME",
    "Ханты Мансийск": "KHM",
    "Улан Удэ": "BU",
    "Петропавловск Камчатский": "KAM",
    "Горно Алтайск": "GA",
    "Горноалтайск": "GA",
    "Нарьян Мар": "NEN",
    "Южно Сахалинск": "SAK",
}


class Point:
    def __init__(self, region, code):
        self.region = region
        self.code = code


def get_all_keys():
    all_keys = [
        *REGIONS_TEMPLATES.keys(),
        *ADDITIONAL_REGION_TEMPLATES.keys(),
        *CITIES_TEMPLATES.keys(),
        *ADDITIONAL_CITY_TEMPLATES.keys()
    ]
    return [key.lower() for key in all_keys]


def key_in_keys(key):
    return key.lower() in get_all_keys()


def get_key_and_value_ignoring_register(template_dict, city):
    for key in template_dict.keys():
        if city.lower() == key.lower():
            return Point(key, template_dict.get(key))
    return None


def region_name_and_code(key):
    reversed_regions_template = dict(
        zip(REGIONS_TEMPLATES.values(), REGIONS_TEMPLATES.keys())
    )
    # Корректное название региона
    result = get_key_and_value_ignoring_register(REGIONS_TEMPLATES, key)
    if result is not None:
        return result

    # Корректное названию города
    result = get_key_and_value_ignoring_register(CITIES_TEMPLATES, key)
    if result is not None:
        # Проверяем совпадение кода с кодом региона
        # Если совпадает, значит это статистика по региону, а не по городу
        region_name = reversed_regions_template.get(result.code)
        if region_name:
            result.region = region_name
        return result

    # Некорректное название региона
    result = get_key_and_value_ignoring_register(ADDITIONAL_REGION_TEMPLATES, key)
    if result is not None:
        # Ищем корректное название региона
        region_name = reversed_regions_template.get(result.code)
        if region_name:
            result.region = region_name
        return result

    # Некорректное название города
    result = get_key_and_value_ignoring_register(ADDITIONAL_CITY_TEMPLATES, key)
    if result is not None:
        # Ищем корректное название региона
        region_name = reversed_regions_template.get(result.code)
        if region_name:
            result.region = region_name
        else:
            # Ищем корректное название города
            reversed_cities_template = dict(
                zip(CITIES_TEMPLATES.values(), CITIES_TEMPLATES.keys())
            )
            region_name = reversed_cities_template.get(result.code)
            if region_name:
                result.region = region_name
        return result

    return None
